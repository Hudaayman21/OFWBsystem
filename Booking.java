import java.time.LocalDateTime;
import javax.swing.*;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Mehnaz
 */
public class Booking extends javax.swing.JFrame {
private Participant currentParticipant; // you can pass this to constructor

    /**
     * Creates new form Booking
     */
    public Booking(Participant participant) {
        System.out.println("üì• Booking opened for: " + participant.getName());
    this.currentParticipant = participant;
    initComponents();
    populateTrainerBox();
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        trainerBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        sessionBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        trainerBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        trainerBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Book a Session");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Trainer");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Session:");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sessionBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(trainerBox, 0, 167, Short.MAX_VALUE)))
                .addContainerGap(93, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainerBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void trainerBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainerBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainerBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String trainerName = (String) trainerBox.getSelectedItem();
    String sessionLabel = (String) sessionBox.getSelectedItem();

    WorkshopSession selectedSession = null;

    for (WorkshopSession s : Data.sessions) {
        if (s.getTrainer().getName().equals(trainerName)) {
            String label = "Day " + s.getStartTime().getDay() + " at " + s.getStartTime().getTime();
            if (label.equals(sessionLabel)) {
                selectedSession = s;
                break;
            }
        }
    }

    if (selectedSession != null) {
        selectedSession.addParticipant(currentParticipant);
        JOptionPane.showMessageDialog(this, "Booking confirmed!");
        System.out.println("‚úÖ Booking confirmed for " + currentParticipant.getName() + " with " + trainerName + " at " + sessionLabel);

        LocalDateTime now = SystemTime.getCurrentTime();
        LocalDateTime start = selectedSession.getStartDateTime();

        if (!now.isBefore(start) && now.isBefore(start.plusMinutes(5))) {
            System.out.println("üü¢ " + currentParticipant.getName() + " joined live session: " + sessionLabel);
            new LiveClass(this, selectedSession).setVisible(true);
            this.dispose();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a valid session.");
        System.out.println("‚ùå Booking failed: Invalid session selected by " + currentParticipant.getName());
    }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new ParticipantRegistrationform().setVisible(true); // open registration form
    this.dispose(); // close welcome screen
    }//GEN-LAST:event_jButton2ActionPerformed
private void populateTrainerBox() {
    trainerBox.removeAllItems();
    for (Trainer t : Data.trainers) {
        trainerBox.addItem(t.getName());
    }

    // Select first trainer and load sessions immediately
    if (trainerBox.getItemCount() > 0) {
        trainerBox.setSelectedIndex(0);
        populateSessionBox();
    }

    trainerBox.addActionListener(e -> populateSessionBox());
}


private void populateSessionBox() {
    sessionBox.removeAllItems();
    String selectedTrainerName = (String) trainerBox.getSelectedItem();

    Trainer selectedTrainer = Data.getTrainerByName(selectedTrainerName);
    if (selectedTrainer == null) return;

    for (WorkshopSession s : Data.sessions) {
        if (s.getTrainer() == selectedTrainer && s.isUpcoming() && !s.isFull(5)) {
            String label = "Day " + s.getStartTime().getDay() + " at " + s.getStartTime().getTime();
             sessionBox.addItem(label);
        }
    }
}





    /**
     * @param args the command line arguments
     */
 public static void main(String[] args) {
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            // ?Sample Trainers
            Trainer t1 = new Trainer("Zara", "zara@gmail.com", "Yoga");
            Trainer t2 = new Trainer("David", "david@gmail.com", "Pilates");
            Trainer t3 = new Trainer("Sophia", "sophia@gmail.com", "Cardio");
            Trainer t4 = new Trainer("Liam", "liam@gmail.com", "Strength");

            //Add trainers to system
            Data.addTrainer(t1);
            Data.addTrainer(t2);
            Data.addTrainer(t3);
            Data.addTrainer(t4);

            // Ô∏è Add some sessions per trainer
            Data.addSession(new WorkshopSession(new DateAndTime(1, "10:00"), t1));
            Data.addSession(new WorkshopSession(new DateAndTime(1, "11:00"), t1));
            Data.addSession(new WorkshopSession(new DateAndTime(2, "10:30"), t2));
            Data.addSession(new WorkshopSession(new DateAndTime(2, "12:00"), t2));
            Data.addSession(new WorkshopSession(new DateAndTime(1, "09:00"), t3));
            Data.addSession(new WorkshopSession(new DateAndTime(3, "14:00"), t4));

            // Dummy participant for testing
            Participant dummy = new Participant("Ali", "ali@gmail.com", "1234567890", "Address", "Male");

            //  Launch booking screen
            Booking bookingFrame = new Booking(dummy);
            bookingFrame.setVisible(true);
        }
    });
}




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> sessionBox;
    private javax.swing.JComboBox<String> trainerBox;
    // End of variables declaration//GEN-END:variables

}